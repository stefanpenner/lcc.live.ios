name: iOS Tests

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Run iOS Unit & UI Tests
    runs-on: macos-14
    timeout-minutes: 30
    env:
      XCODE_VERSION: '16.2'
      IOS_PROJECT: 'lcc.xcodeproj'
      IOS_SCHEME: 'lcc'
    strategy:
      matrix:
        simulator: ["iPhone 16 Pro Max"]
        os: ["18.2"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Verify Xcode Version
        run: |
          xcodebuild -version

      - name: List Available Simulators
        run: |
          xcrun simctl list devices available

      - name: Show available schemes
        run: |
          echo "Listing schemes in $IOS_PROJECT"
          xcodebuild -list -project "$IOS_PROJECT"
          # Fail fast if expected scheme isn't present
          if ! xcodebuild -list -project "$IOS_PROJECT" | sed -n '/Schemes:/,/^$/p' | grep -q "^\s*${IOS_SCHEME}$"; then
            echo "Error: Expected scheme '${IOS_SCHEME}' not found in project '${IOS_PROJECT}'." >&2
            exit 1
          fi

      - name: Run Tests
        run: |
          set -euo pipefail
          xcodebuild clean test \
            -project "$IOS_PROJECT" \
            -scheme "$IOS_SCHEME" \
            -destination "platform=iOS Simulator,name=${{ matrix.simulator }},OS=${{ matrix.os }}" \
            -enableCodeCoverage YES \
            CODE_SIGNING_ALLOWED=NO
        env:
          NSUnbufferedIO: "YES"

      - name: Collect Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcresults-${{ matrix.simulator }}-${{ matrix.os }}
          path: |
            **/*.xcresult
            ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcactivitylog
